name: Deploy with Ansible in SaaS mode

on:
  push:
    branches: [ main ]

jobs:
  ansible-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout du repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Installer Ansible + dépendances
      - name: Install Ansible + dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible python3-docker unzip curl jq
          ansible-galaxy collection install community.docker

      # 3️⃣ Lancer le playbook pour créer le conteneur web
      - name: Run Ansible playbook
        run: ansible-playbook -i inventory.ini deploy.yml

      # 4️⃣ Télécharger et configurer Ngrok
      - name: Download & setup Ngrok
        run: |
          curl -s https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz -o ngrok.tgz
          tar -xzf ngrok.tgz
          sudo mv ngrok /usr/local/bin/
          ngrok config add-authtoken $NGROK_AUTHTOKEN
          ngrok version
        env:
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}

      # 5️⃣ Lancer Ngrok après que le conteneur soit prêt
      - name: Start Ngrok tunnel (HTTP on port 8080)
        run: |
          nohup ngrok http 8080 --log=stdout > ngrok.log &
          # attendre que le port 8080 soit joignable
          for i in {1..15}; do
            nc -z localhost 8080 && break
            echo "Waiting for port 8080..."
            sleep 2
          done
          echo "----- Ngrok Tunnel Info -----"
          curl --silent http://127.0.0.1:4040/api/tunnels \
            | jq -r '.tunnels[] | select(.proto=="https") | .public_url' \
            | head -n1

      # 6️⃣ Upload de la page HTML générée
      - name: Upload generated website
        uses: actions/upload-artifact@v4
        with:
          name: website
          path: /tmp/html/index.html
